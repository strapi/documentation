name: Credit Reward Automation

on:
  pull_request:
    types: [closed]

jobs:
  call-webhook:
    if: >
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'contribution')
    runs-on: ubuntu-latest
    steps:
      - name: Debug context
        run: |
          echo "merged=${{ github.event.pull_request.merged }}"
          echo "labels=${{ join(github.event.pull_request.labels.*.name, ',') }}"
          echo "base=${{ github.event.pull_request.base.ref }}"
          echo "head=${{ github.event.pull_request.head.ref }}"
          echo "merge_commit_sha=${{ github.event.pull_request.merge_commit_sha }}"

      - name: Checkout repo (full history)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Determine first commit of PR branch
        id: first_commit
        shell: bash
        run: |
          set -euo pipefail
          pr="${{ github.event.pull_request.number }}"
          base_sha="${{ github.event.pull_request.base.sha }}"

          # 1) S'assurer que les deux côtés existent localement
          git fetch --no-tags origin "refs/pull/${pr}/head:pr-${pr}"
          git fetch --no-tags origin "${base_sha}"

          # 2) Commits introduits par la PR par rapport au commit de base
          first_sha="$(git rev-list --reverse --no-merges "${base_sha}..pr-${pr}" | head -n1 || true)"

          # Fallback si jamais la range est vide (rare)
          if [ -z "${first_sha}" ]; then
            mb="$(git merge-base "${base_sha}" "pr-${pr}")"
            first_sha="$(git rev-list --reverse "${mb}..pr-${pr}" | head -n1)"
          fi

          # 3) Email de l'auteur du premier commit (fallback sur committer)
          author_email="$(git show -s --format='%ae' "${first_sha}")"
          committer_email="$(git show -s --format='%ce' "${first_sha}")"
          email="${author_email:-$committer_email}"

          echo "sha=${first_sha}" >> "$GITHUB_OUTPUT"
          echo "email=${email}" >> "$GITHUB_OUTPUT"

      - name: Call webhook
        run: |
          curl -X POST "https://hooks.zapier.com/hooks/catch/1615118/uh44k4y/" \
            -H "Content-Type: application/json" \
            -d '{
              "pr_number": "${{ github.event.pull_request.number }}",
              "title": "${{ github.event.pull_request.title }}",
              "base_branch": "${{ github.event.pull_request.base.ref }}",
              "contributor_login": "${{ github.event.pull_request.user.login }}",
              "contributor_email": "${{ steps.first_commit.outputs.email }}"
            }'
